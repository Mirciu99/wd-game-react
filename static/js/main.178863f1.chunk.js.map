{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","onClickEvent","value","Board","initialSquares","Array","fill","useState","squares","setSquares","xIsNext","setxIsNext","renderSquare","index","newSquares","winnerDeclare","Boolean","calculateWinner","squareFilled","handleClickEvent","winner","status","Game","line","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"gMAKMA,EAAS,SAACC,GAEd,OACE,wBACAC,UAAU,SACVC,QAASF,EAAMG,aAFf,SAICH,EAAMI,SAQLC,EAAQ,WAQZ,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MAErC,EAA6BC,mBAASH,GAAtC,mBAAMI,EAAN,KAAeC,EAAf,KACA,EAA6BF,oBAAS,GAAtC,mBAAMG,EAAN,KAAeC,EAAf,KAkBMC,EAAe,SAACC,GACpB,OACE,cAAChB,EAAD,CAAQK,MAAQM,EAAQK,GACxBZ,aAAgB,kBAnBK,SAACY,GAExB,IAAMC,EAAU,YAAON,GAEjBO,EAAgBC,QAAQC,EAAgBH,IACxCI,EAAeF,QAAQF,EAAWD,IACpCE,GAAiBG,IAIrBJ,EAAWD,GAASH,EAAU,IAAM,IAEpCD,EAAWK,GACXH,GAAYD,IAMYS,CAAiBN,OAIrCO,EAASH,EAAgBT,GACzBa,EAASD,EAAM,kBACVA,GADU,uBAELV,EAAU,IAAM,KAEhC,OACE,gCACE,qBAAKX,UAAU,SAAf,SACGsB,IAEH,sBAAKtB,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,MAElD,sBAAKb,UAAU,YAAf,UACGa,EAAa,GAAIA,EAAa,GAAIA,EAAa,UAQlDU,EAAO,WACX,OACE,sBAAKvB,UAAW,OAAhB,iBAEE,cAACI,EAAD,QAWN,SAASc,EAAgBT,GAOvB,IANA,IAMA,MANa,CACX,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GACvB,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,GACvB,CAAC,EAAE,EAAE,GAAI,CAAC,EAAE,EAAE,IAGhB,eAAuB,CAAlB,IAAIe,EAAI,KACX,cAAiBA,EAAjB,GAAMC,EAAN,KAASC,EAAT,KAAYC,EAAZ,KAEA,GAAGlB,EAAQgB,IAAMhB,EAAQgB,KAAOhB,EAAQiB,IAAMjB,EAAQgB,KAAOhB,EAAQkB,GAEnE,OAAOlB,EAAQgB,GAGnB,OAAO,KApBTG,IAASC,OACP,cAACN,EAAD,IACAO,SAASC,eAAe,W","file":"static/js/main.178863f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\n\nconst Square = (props) => {\n\n  return (\n    <button \n    className=\"square\"\n    onClick={props.onClickEvent} >\n      \n    {props.value}\n      \n    </button>\n  );\n};\n\n\n\nconst Board = () => {\n  \n  // const initialSquares = [\n  //   null, null, null,\n  //   null, null, null,\n  //   null, null, null,\n  // ];\n  \n  const initialSquares = Array(9).fill(null);\n\n  const[squares, setSquares] = useState(initialSquares);\n  const[xIsNext, setxIsNext] = useState(true);\n\n  const handleClickEvent = (index) => {\n    //1.copy of a square state array\n    const newSquares = [...squares];\n    \n    const winnerDeclare = Boolean(calculateWinner(newSquares));\n    const squareFilled = Boolean(newSquares[index]);\n    if (winnerDeclare || squareFilled) {\n      return;\n    }\n    //2.mutate the coppy, setting the i-th element to 'X'\n    newSquares[index] = xIsNext ? 'X' : '0';\n    //3. call the setsquares function with the mutated copy\n    setSquares(newSquares);\n    setxIsNext(!xIsNext);\n  };\n\n  const renderSquare = (index) => {\n    return(\n      <Square value ={squares[index]}\n      onClickEvent = {() => handleClickEvent(index)}\n      />\n    );\n  };\n  const winner = calculateWinner(squares);\n  const status = winner ?\n  `Winner: ${winner}` :\n  `Next player: ${xIsNext ? 'X' : 'O'}`;\n  \n  return (\n    <div>\n      <div className=\"status\">\n        {status}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(0)}{renderSquare(1)}{renderSquare(2)} \n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}{renderSquare(4)}{renderSquare(5)} \n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}{renderSquare(7)}{renderSquare(8)} \n      </div>\n        \n    </div>\n  );\n};\n\n\nconst Game = () => {\n  return (\n    <div className =\"game\">\n      Game\n      <Board />\n    </div>\n  );\n};\n\n\nReactDOM.render (\n  <Game />,\n  document.getElementById('root')\n);\n\nfunction calculateWinner(squares) {\n  const lines =[\n    [0,1,2], [3,4,5], [6,7,8], //randuri\n    [0,3,6], [1,4,7], [2,5,8], //coloane\n    [0,4,8], [2,4,6], //diagonala\n  ];\n\n  for (let line of lines){\n    const[a, b, c] = line;\n\n    if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c])\n    {\n      return squares[a]; //X OR 0\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}